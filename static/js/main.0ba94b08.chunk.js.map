{"version":3,"sources":["components/Form.js","components/Weather.js","App.js","index.js"],"names":["Header","styled","div","_templateObject","Input","input","_templateObject2","Button","button","_templateObject3","Form","react_default","a","createElement","onSubmit","this","props","getWeather","type","name","placeholder","React","Component","Weather","weatherClass","weather_code","_this$props","temp","city","humidity","description","wind","country","temp_max","temp_min","className","API_KEY","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","api_call","data","wrap","_context","prev","next","preventDefault","target","elements","value","fetch","concat","sent","json","setState","Math","round","main","sys","speed","weather","id","sunrise","sunset","error","stop","_x","apply","arguments","state","data-hour","time","components_Form","components_Weather","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0ba94b08.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport styled from \"styled-components\"\n\n\nconst Header = styled.div`\n    margin: 0 auto;\n    padding: 0;\n    text-align: center;\n`\n\nconst Input = styled.input`\n    width: 200px;\n    height: 32px;\n    border-radius: 7px;\n    display: inline-block;\n    font-size: 16px;\n    margin: 15px;\n    flex: 1;\n    justify-content: center;\n    align-items: center;\n    font-family: 'Source Code Pro', monospace;\n`;\n\nconst Button = styled.button`\n    width: 110px;\n    height: 32px;\n    border-radius: 7px;\n    font-weight: bold;\n    color: white;\n    cursor: pointer;\n    background-color: var(--danger);\n    display: inline-block;\n    padding: 6px 12px;\n    margin-bottom: 0;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.42857143;\n    white-space: nowrap;\n    vertical-align: middle;\n    cursor: pointer;\n    background-image: none;\n    border: 1px solid transparent;\n    border-radius: 4px;\n    font-family: 'Source Code Pro', monospace;\n`;\n\n\nclass Form extends React.Component {\n    render() {\n        return(\n        <Header>\n              <form onSubmit={this.props.getWeather}>\n                  <div>\n                    <h1>Weather</h1>\n                    <Input \n                        type=\"text\"\n                        name=\"city\"\n                        placeholder=\"City...\"\n                        // onChange={this.handleChange}         \n                    />\n                <Button>Get Weather</Button>\n         \n                </div>\n            </form>\n        </Header>\n        )\n    }\n}\nexport default Form;","import React from \"react\";\n\n\nclass Weather extends React.Component {\n    render() {\n        let weatherClass = (\"wi wi-owm-\" + this.props.weather_code)\n        const { temp, city, humidity, description, wind, country, temp_max, temp_min } = this.props;\n\n    return (\n        <div className=\"weather-container\">\n         \n            {\n                this.props.city && <p className=\"city country\">{ city },{ country }</p>\n            }\n\n           {\n               this.props.temp && <p className=\"temp\"><i className=\"wi wi-fahrenheit\"></i>{ temp } </p>\n           }\n\n           {\n               this.props.description && <p className=\"weather-condition\"><i className={weatherClass}> </i> <br />\n               <span className=\"description\">{ description }</span></p>\n           }\n\n           {\n               this.props.wind && <p className=\"wind\"><i className=\"wi wi-strong-wind\"></i>\n               <br /> { wind }  <br /> Wind\n               </p>\n           }\n\n           {\n               this.props.humidity && <p className=\"humidity\"><i className=\"wi wi-humidity\"></i> <br/>\n               { humidity } <br/> Humidity \n               </p>\n           }\n           {\n                this.props.temp_min && this.props.temp_max &&\n               <p className=\"temp-min-max\"><i className=\"wi wi-thermometer\"></i> <br /> \n               { temp_min } | { temp_max }\n               <br/>\n               Min | Max\n               </p>\n           }\n\n           {/* {\n               this.props.sunrise && \n               <p className=\"sunrise\"><i className=\"wi wi-sunrise\"></i>\n               {this.props.sunrise}</p>\n           }\n\n           {\n               this.props.sunset && <p className=\"sunset\"><i className=\"wi wi-sunset\"></i><br/>{this.props.sunset}\n               <br/> sunset\n               </p>\n           } */}\n        </div> \n     )\n   }\n}\n\n\n    \n\nexport default Weather;","import React from 'react';\nimport Form from './components/Form';\nimport Weather from \"./components/Weather\";\n\nimport './App.css';\n\nconst API_KEY = \"050fe05f4b6fa9f366de526cee98af35\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        temp: '',\n        city: '',\n        country: '',\n        wind: '',\n        description: '',\n        humidity: '',\n        weather_code: '',\n        temp_min: '',\n        temp_max: '',\n        sunrise: '',\n        sunset: '',\n        error: ''\n    }\n}\n\ngetWeather = async (e) => {\n  e.preventDefault();\n    const city = e.target.elements.city.value;\n    // const country = e.target.elements.country.value;\n   \n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&units=imperial&appid=${API_KEY}`);\n            const data = await api_call.json();\n            \n            // console.log(data)\n            this.setState({\n                temp: Math.round(data.main.temp),\n                city: data.name,\n                country: data.sys.country,\n                wind: Math.round(data.wind.speed),\n                description: data.weather[0].description,\n                humidity: Math.round(data.main.humidity),\n                weather_code: data.weather[0].id,\n                temp_min: Math.round(data.main.temp_min),\n                temp_max: Math.round(data.main.temp_max),\n                sunrise: data.sys.sunrise,\n                sunset: data.sys.sunset,\n                error: \"Please enter the values.\"\n            })\n}\n\n\nrender() {\n\n  // let date = new Date()\n  // let time = date.getHours()\n  // let timeOfDay;\n  // if (time < 12) {\n  //   timeOfDay = \"Morning\"\n  //   document.body.className = \"sun\"\n  // } else if (time >= 12 && time < 17) {\n  //   timeOfDay = \"Afternoon\"\n  //   document.body.className = \"moon\"\n  // } else {\n  //   timeOfDay = \"Evening\"\n  //   document.body.className = \"blood\"\n  // }\n    return(\n        <div className=\"container\">\n          <div className=\"Icon\" data-hour={this.state.time}>\n            <div className=\"Sky\"></div>\n              <Form getWeather={this.getWeather}/>\n                <Weather \n                  temp={this.state.temp}\n                  city={this.state.city}\n                  country={this.state.country}\n                  wind={this.state.wind}\n                  description={this.state.description}\n                  humidity={this.state.humidity}\n                  weather_code={this.state.weather_code}\n                  temp_max={this.state.temp_max}\n                  temp_min={this.state.temp_min}\n                  // sunrise={this.state.sunrise}\n                  // sunset={this.state.sunset}\n                />\n          </div>\n        </div>\n    )\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'weather-icons/css/weather-icons.css';\nimport 'weather-icons2/css/weather-icons.min.css';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}